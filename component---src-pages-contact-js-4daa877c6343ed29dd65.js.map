{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/sitemetadata.js","webpack:///./src/components/layout.js"],"names":["About","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","className","href","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","header","core_browser_esm","css","header_ref","header_ref2","gatsby_browser_entry","to","_ref3","color","_ref4","_ref5","id","_ref6","_ref7","SiteMetadata","_ref2","_ref2$site$siteMetada","site","siteMetadata","siteUrl","title","Helmet","defaultTitle","titleTemplate","lang","rel","name","content","property","_2032259233","Layout","react_default","a","Fragment","sitemetadata","node"],"mappings":"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","file":"component---src-pages-contact-js-4daa877c6343ed29dd65.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst About = () => (\n    <Layout>\n        <div className=\"contained\">\n            <h2>Contact</h2>\n            <p>\n                Please, feel free to contact us at the email below:\n            </p>\n            <a href=\"mailto:omdb@diracmaterials.org\">omdb@diracmaterials.org</a>\n        </div>\n    </Layout>\n)\n\nexport default About\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { css } from \"@emotion/core\"\n\nexport default () => (\n    <div css={{\n        margin: \"-20px -20px 0 -20px\"\n    }}>\n        <nav className=\"primaryColor\">\n            <div css={{\n                width: \"90vw\",\n                margin: \"auto\",\n                display: \"flex\",\n            }}>\n                <Link\n                    to=\"/\"\n                    css={{\n                        flexGrow: 1,\n                    }}>\n                    <button color=\"inherit\" className=\"underline\">\n                        <span\n                            css={{\n                                backgroundColor: \"#FFF874\",\n                                padding: \"2px\",\n                                marginRight: \"1rem\",\n                                color: \"#3f51b5\",\n                                display: \"inline-block\",\n                                fontSize: \"90%\",\n                            }}\n                        >MH</span>\n                        mathub.io\n                    </button>\n                </Link>\n\n                <Link\n                    to=\"/about\"\n                    css={{\n                        marginRight: \"0.5rem\",\n                    }}>\n                    <button color=\"inherit\" className=\"underline\">\n                        <span>About</span>\n                    </button>\n                </Link>\n\n                <Link to=\"/contact\">\n                    <button color=\"inherit\" className=\"underline\">\n                        <span>Contact</span>\n                    </button>\n                </Link>\n            </div>\n        </nav >\n\n        <div id=\"introduction\" className=\"section primaryColor\" css={{\n            marginBottom: \"3rem\",\n        }}>\n            <div className=\"contained centered\">\n                <h1>The Future of Materials Development<span css={{ color: \"#FFF874\", }}>.</span></h1>\n\n                Machine learning solutions for materials science.\n            </div>\n        </div>\n    </div >\n);\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\n// import gatsbyIcon from \"../assets/gatsby-icon.png\"\n\nconst SiteMetadata = ({ pathname }) => {\n    return <StaticQuery\n        query={graphql`\n      query SiteMetadata {\n        site {\n          siteMetadata {\n            siteUrl\n            title\n          }\n        }\n      }\n    `}\n        render={({\n            site: {\n                siteMetadata: { siteUrl, title },\n            },\n        }) => (\n                <Helmet defaultTitle={title} titleTemplate={title}>\n                    <html lang=\"en\" />\n                    <link rel=\"canonical\" href={`${siteUrl}${pathname}`} />\n                    <meta name=\"docsearch:version\" content=\"2.0\" />\n                    <meta\n                        name=\"viewport\"\n                        content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\n                    />\n\n                    <meta property=\"og:url\" content={siteUrl} />\n                    <meta property=\"og:type\" content=\"website\" />\n                    <meta property=\"og:locale\" content=\"en\" />\n                    <meta property=\"og:site_name\" content={title} />\n                    {/* <meta property=\"og:image\" content={`${siteUrl}${gatsbyIcon}`} />\n                    <meta property=\"og:image:width\" content=\"512\" />\n                    <meta property=\"og:image:height\" content=\"512\" /> */}\n                </Helmet >\n            )}\n    />\n}\n\nexport default SiteMetadata\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './header'\nimport SiteMetadata from './sitemetadata'\n\nconst Layout = ({ children }) => {\n    return <>\n        <SiteMetadata />\n        <Header />\n        {children}\n    </>\n}\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}