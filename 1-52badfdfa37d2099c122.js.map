{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/sitemetadata.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","header","core_browser_esm","css","header_ref","header_ref2","_ref3","gatsby_browser_entry","to","_ref4","color","className","_ref5","id","_ref6","_ref7","_ref8","_ref9","_ref10","SiteMetadata","_ref","pathname","_ref2","_ref2$site$siteMetada","site","siteMetadata","siteUrl","title","Helmet","defaultTitle","titleTemplate","lang","rel","href","name","content","property","_2032259233","Layout","react_default","a","Fragment","sitemetadata","node","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"1-52badfdfa37d2099c122.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { css } from \"@emotion/core\"\n\nexport default () => (\n    <div css={css`\n                margin: -20px -20px 0 -20px;\n            `}>\n        <nav css={\n            css`\n            background-color: #3f51b5;\n            `\n        }>\n            <div css={\n                css`\n            width: 90vw;\n            margin: auto;\n            display: flex;\n            `\n            }>\n                <Link\n                    to=\"/\"\n                    css={css`\n                    text-decoration: none;\n                    color: inherit;\n                    flex-grow: 1;\n                `}>\n                    <button color=\"inherit\" className=\"underline\">\n                        <span\n                            css={css`\n                                background-color: #FFF874;\n                                padding: 2px;\n                                margin-right: 1rem;\n                                color: #3f51b5;\n                                display: inline-block;\n                                font-size: 90%;\n                            `}\n                        >MH</span>\n                        <span id=\"appearing-logo\"\n                        >mathub.io</span>\n                    </button>\n                </Link>\n\n                <Link\n                    to=\"/about\"\n                    css={css`\n                    text-decoration: none;\n                    color: inherit;\n                    margin-right: 0.5rem;\n                `}>\n                    <button color=\"inherit\" className=\"underline\">\n                        <span>About</span>\n                    </button>\n                </Link>\n\n                <Link\n                    to=\"/contact\"\n                    css={css`\n                    text-decoration: none;\n                    color: inherit;\n                `}>\n                    <button color=\"inherit\" className=\"underline\">\n                        <span>Contact</span>\n                    </button>\n                </Link>\n            </div>\n        </nav >\n\n        <div id=\"introduction\" className=\"section\" css={css`\n            color: white;\n            background-color: #3f51b5;\n            margin-bottom: 3rem;\n            `}>\n            <div className=\"contained\" css={css`\n                margin: auto;\n                text-align: center;\n                `}>\n                <h1>The Future of Materials Development<span css={css`color: #FFF874;`}>.</span></h1>\n\n                Machine learning solutions for materials science.\n            </div>\n        </div>\n    </div>\n);\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\n// import gatsbyIcon from \"../assets/gatsby-icon.png\"\n\nconst SiteMetadata = ({ pathname }) => {\n    return <StaticQuery\n        query={graphql`\n      query SiteMetadata {\n        site {\n          siteMetadata {\n            siteUrl\n            title\n          }\n        }\n      }\n    `}\n        render={({\n            site: {\n                siteMetadata: { siteUrl, title },\n            },\n        }) => (\n                <Helmet defaultTitle={title} titleTemplate={title}>\n                    <html lang=\"en\" />\n                    <link rel=\"canonical\" href={`${siteUrl}${pathname}`} />\n                    <meta name=\"docsearch:version\" content=\"2.0\" />\n                    <meta\n                        name=\"viewport\"\n                        content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\n                    />\n\n                    <meta property=\"og:url\" content={siteUrl} />\n                    <meta property=\"og:type\" content=\"website\" />\n                    <meta property=\"og:locale\" content=\"en\" />\n                    <meta property=\"og:site_name\" content={title} />\n                    {/* <meta property=\"og:image\" content={`${siteUrl}${gatsbyIcon}`} />\n                    <meta property=\"og:image:width\" content=\"512\" />\n                    <meta property=\"og:image:height\" content=\"512\" /> */}\n                </Helmet >\n            )}\n    />\n}\n\nexport default SiteMetadata\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './header'\nimport SiteMetadata from './sitemetadata'\n\nconst Layout = ({ children }) => {\n    return <>\n        <SiteMetadata />\n        <Header />\n        {children}\n        {/* <footer>\n            <div className=\"contained centered\">\n                © 2019 Alexander V. Balatsky\n            </div>\n        </footer> */}\n    </>\n}\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}